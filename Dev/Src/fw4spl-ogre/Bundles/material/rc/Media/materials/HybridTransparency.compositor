compositor HybridTransparency
{
    technique
    {
        // Depth peeling texture
        // Color buffer - used for blending
        texture gbuffer target_width target_height PF_R8G8B8A8
        // Ping buffer
        texture ping_buffer target_width target_height PF_R8G8B8A8 PF_R8G8B8A8
        // Pong buffer
        texture pong_buffer target_width target_height PF_R8G8B8A8 PF_R8G8B8A8
        // Depth map
        texture back_depth target_width target_height PF_R8G8B8A8
        // Fake texture for the first
        texture peel_init target_width target_height PF_R8G8B8A8 depth_pool 0 chain_scope

        // WBOIT texture
        // Occlusion computing
        texture occlusion target_width target_height PF_FLOAT32_R
        // Weight computing
        texture weightedColor target_width target_height PF_FLOAT16_RGBA
        // Transmittance computing
        texture transmittance target_width target_height PF_R8
        // WBOIT render
        texture WBOIT_output target_width target_height PF_R8G8B8A8

        // Back depth buffer
        target back_depth
        {
            input none
            pass clear
            {
            }
            pass clear
            {
                buffers depth
                depth_value 0
            }

            shadows off
            material_scheme HybridTransparency_back_depth

            pass render_scene
            {
            }
        }

        // Init the fake depth texture used for the first peel
        target peel_init
        {
            input none
            pass render_quad
            {
               material ClearDepth
            }
        }

        /// Depth Peeling - core kernels

        // Init peel buffer
        target ping_buffer
        {
            input none
            pass clear
            {
            }

            shadows off
            material_scheme HybridTransparency_peel_init

            pass render_scene
            {
            }
        }

        // Init blend buffer
        target gbuffer
        {
            input none
            pass clear
            {
                colour_value 0 0 0 1
            }
            pass render_quad
            {
                material DepthPeeling_Blend
                input 0 ping_buffer 0
            }
        }

        // Peel 1
        target pong_buffer
        {
            input none
            pass clear
            {
            }

            shadows off
            material_scheme HybridTransparency_peel_pong

            pass render_scene
            {
            }
        }

        // Blend 1
        target gbuffer
        {
            input none
            pass render_quad
            {
                material DepthPeeling_Blend
                input 0 pong_buffer 0
            }
        }

        // Peel 2
        target ping_buffer
        {
            input none
            pass clear
            {
            }

            shadows off
            material_scheme HybridTransparency_peel_ping

            pass render_scene
            {
            }
        }

        // Blend 2
        target gbuffer
        {
            input none
            pass render_quad
            {
                material DepthPeeling_Blend
                input 0 ping_buffer 0
            }
        }

        /// WBOIT - tail kernels

        // Occlusion map
        target occlusion
        {
            input none
            pass clear
            {
                buffers colour depth
                colour_value 1 1 1 1
            }

            shadows off
            material_scheme HybridTransparency_occlusion_map

            pass render_scene
            {
            }
        }

        // Weight blend
        target weightedColor
        {
            input none
            pass clear
            {
                buffers colour
                colour_value 0 0 0 0
            }

            shadows off
            material_scheme HybridTransparency_weight_blend

            pass render_scene
            {
            }
        }

        // Transmittance blend
        target transmittance
        {
            input none
            pass clear
            {
                buffers colour depth
                colour_value 1 1 1 1
            }

            shadows off
            material_scheme HybridTransparency_transmittance_blend

            pass render_scene
            {
            }
        }

        // WBOIT blend
        target WBOIT_output
        {
            input none
            pass render_quad
            {
                material HybridTransparency_WBOIT_Blend
                input 0 weightedColor
                input 1 transmittance
            }
        }

        // Blend final
        target gbuffer
        {
            input none
            pass render_quad
            {
                material HybridTransparency_Blend_Final
                input 0 WBOIT_output
            }
        }


        // Final pass
        target_output
        {
            input none
            pass render_quad
            {
                material HybridTransparency_Final
                input 0 gbuffer
                input 1 back_depth
            }
        }
    }
}
